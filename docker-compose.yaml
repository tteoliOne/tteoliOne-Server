version: '3'
services:
  server:
    container_name: server
    image: anwooseong/tteolione-server
    expose:
      - 8081
    ports:
      - 8081:8081
    restart: "always"
    environment:
      TZ: "Asia/Seoul" # timezone 설정
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - mongodb

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  zookeeper:
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
    ports:
      - 9092:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    image: mongo
    container_name: mongodb-container
    volumes:
      - ~/data:/data/db
    ports:
      - "27017:27017"

  nginx:
    container_name: nginx
    image: anwooseong/tteolione-nginx
    restart: unless-stopped
    ports:
      - 80:80
    depends_on:
      - "server"
    environment:
      TZ: "Asia/Seoul" # timezone 설정

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana  # 볼륨으로 설정

volumes:
  redis-data:
  grafana-data:
  grafana-config:  # 새로운 볼륨 추가
