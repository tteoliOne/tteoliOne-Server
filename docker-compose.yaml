version: '3'
services:
  server:
    container_name: server
    image: anwooseong/tteolione-server
    expose:
      - 8081
    ports:
      - 8081:8081
    restart: "always"
    environment:
      TZ: "Asia/Seoul" # timezone 설정
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - mongodb

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  mongodb:
    image: mongo
    container_name: mongodb-container
    volumes:
      - ~/data:/data/db
    ports:
      - "27017:27017"


  nginx:
    container_name: nginx
    image: anwooseong/tteolione-nginx
    restart: unless-stopped
    ports:
      - 80:80
    depends_on:
      - "server"
    environment:
      TZ: "Asia/Seoul" # timezone 설정

volumes:
  redis-data: